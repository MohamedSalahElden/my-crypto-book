{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":"<p>Welcome to My Crypto Book, a guide to understanding cryptography and its applications. This book covers essential topics such as symmetric and asymmetric encryption, hash functions, and digital signatures.</p>"},{"location":"#chapters","title":"Chapters","text":"<ol> <li>Introduction to Cryptography</li> <li>Symmetric Encryption</li> <li>Asymmetric Encryption</li> <li>Hash Functions and Digital Signatures</li> </ol>"},{"location":"chapter1/","title":"Chapter 1: Introduction to Cryptography","text":""},{"location":"chapter1/#what-is-cryptography","title":"What is Cryptography?","text":"<p>Cryptography is the science of securing communication by transforming information into a format that is unreadable to unauthorized users. It ensures confidentiality, integrity, and authentication in digital communications.</p>"},{"location":"chapter1/#goals-of-cryptography","title":"Goals of Cryptography","text":"<ol> <li>Confidentiality \u2013 Ensures that only authorized users can access information.</li> <li>Integrity \u2013 Protects data from being altered.</li> <li>Authentication \u2013 Verifies the identity of users and devices.</li> <li>Non-repudiation \u2013 Prevents denial of actions taken.</li> </ol>"},{"location":"chapter1/#types-of-cryptography","title":"Types of Cryptography","text":"<ul> <li>Symmetric Encryption \u2013 Uses the same key for encryption and decryption.</li> <li>Asymmetric Encryption \u2013 Uses a pair of keys (public and private) for encryption and decryption.</li> <li>Hashing \u2013 Generates a fixed-length output that uniquely represents the input data.</li> </ul>"},{"location":"chapter2/","title":"Chapter 2: Symmetric Encryption","text":""},{"location":"chapter2/#what-is-symmetric-encryption","title":"What is Symmetric Encryption?","text":"<p>Symmetric encryption uses a single key to encrypt and decrypt data. It is fast and efficient but requires secure key exchange mechanisms.</p>"},{"location":"chapter2/#common-algorithms","title":"Common Algorithms","text":"<ul> <li>AES (Advanced Encryption Standard) \u2013 A widely used block cipher.</li> <li>DES (Data Encryption Standard) \u2013 Older, now considered insecure.</li> <li>Blowfish \u2013 A strong alternative to DES with variable-length keys.</li> </ul>"},{"location":"chapter2/#example-of-aes-encryption","title":"Example of AES Encryption","text":"<pre><code>from Crypto.Cipher import AES\nimport os\n\nkey = os.urandom(16)  # Generate a random 16-byte key\ncipher = AES.new(key, AES.MODE_EAX)\nciphertext, tag = cipher.encrypt_and_digest(b\"Secret Message\")\n</code></pre>"},{"location":"chapter2/#advantages-and-disadvantages","title":"Advantages and Disadvantages","text":"<p>\u2705 Fast and efficient for large data volumes. \u274c Key distribution can be challenging.</p>"},{"location":"chapter3/","title":"Chapter 3: Asymmetric Encryption","text":""},{"location":"chapter3/#what-is-asymmetric-encryption","title":"What is Asymmetric Encryption?","text":"<p>Asymmetric encryption uses a pair of keys: - Public Key \u2013 Used for encryption. - Private Key \u2013 Used for decryption.</p>"},{"location":"chapter3/#common-algorithms","title":"Common Algorithms","text":"<ul> <li>RSA (Rivest-Shamir-Adleman) \u2013 A widely used public-key algorithm.</li> <li>ECC (Elliptic Curve Cryptography) \u2013 Provides strong security with smaller key sizes.</li> <li>Diffie-Hellman \u2013 A method for secure key exchange.</li> </ul>"},{"location":"chapter3/#example-of-rsa-encryption","title":"Example of RSA Encryption","text":"<pre><code>from Crypto.PublicKey import RSA\nfrom Crypto.Cipher import PKCS1_OAEP\n\nkey = RSA.generate(2048)\ncipher = PKCS1_OAEP.new(key.publickey())\nciphertext = cipher.encrypt(b\"Secret Message\")\n</code></pre>"},{"location":"chapter3/#use-cases","title":"Use Cases","text":"<ul> <li>Secure communications (SSL/TLS)</li> <li>Digital signatures</li> <li>Cryptocurrency transactions</li> </ul>"},{"location":"chapter4/","title":"Chapter 4: Hash Functions and Digital Signatures","text":""},{"location":"chapter4/#what-is-a-hash-function","title":"What is a Hash Function?","text":"<p>A hash function takes an input and produces a fixed-length output, called a hash. It is used for data integrity and authentication.</p>"},{"location":"chapter4/#common-hash-functions","title":"Common Hash Functions","text":"<ul> <li>SHA-256 (Secure Hash Algorithm 256-bit) \u2013 Used in Bitcoin and secure authentication.</li> <li>MD5 (Message Digest Algorithm 5) \u2013 Fast but insecure due to vulnerabilities.</li> <li>SHA-3 \u2013 The latest standard in secure hashing.</li> </ul>"},{"location":"chapter4/#example-of-sha-256-hashing","title":"Example of SHA-256 Hashing","text":"<pre><code>import hashlib\n\nmessage = b\"Hello, World!\"\nhash_object = hashlib.sha256(message)\nprint(hash_object.hexdigest())\n</code></pre>"},{"location":"chapter4/#digital-signatures","title":"Digital Signatures","text":"<p>Digital signatures use asymmetric encryption to verify the authenticity of messages. - Signing \u2013 The sender encrypts a hash with their private key. - Verification \u2013 The receiver decrypts the hash using the sender\u2019s public key.</p>"},{"location":"chapter4/#use-cases","title":"Use Cases","text":"<ul> <li>Document verification</li> <li>Software authenticity</li> <li>Blockchain transactions</li> </ul>"}]}